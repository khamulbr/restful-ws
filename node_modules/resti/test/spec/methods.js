describe('resti', function() {
	var swapi;
	var swapiUrl = 'http://swapi.co/api';

	beforeEach(function() {
		swapi = new resti(swapiUrl);
		jasmine.Ajax.install();
	});

	afterEach(function() {
		resti.reset();
		jasmine.Ajax.uninstall();
	});

	describe('sends correct method on request from corresponding resti.method:', function() {
		it('get', function() {
			swapi.get();
			expect(jasmine.Ajax.requests.mostRecent().method).toEqual('GET');
		});
		it('post', function() {
			swapi.post();
			expect(jasmine.Ajax.requests.mostRecent().method).toEqual('POST');
		});
		it('put', function() {
			swapi.put();
			expect(jasmine.Ajax.requests.mostRecent().method).toEqual('PUT');
		});
		it('patch', function() {
			swapi.patch();
			expect(jasmine.Ajax.requests.mostRecent().method).toEqual('PATCH');
		});
		it('head', function() {
			swapi.head();
			expect(jasmine.Ajax.requests.mostRecent().method).toEqual('HEAD');
		});
		it('delete with remove method', function() {
			swapi.remove();
			expect(jasmine.Ajax.requests.mostRecent().method).toEqual('DELETE');
		});
		it('options', function() {
			swapi.options();
			expect(jasmine.Ajax.requests.mostRecent().method).toEqual('OPTIONS');
		});
	});

});