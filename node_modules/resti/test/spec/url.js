describe('resti', function() {
	var swapi;
	var swapiUrl = 'http://swapi.co/api';

	beforeEach(function() {
		swapi = new resti(swapiUrl);
		jasmine.Ajax.install();
	});

	afterEach(function() {
		resti.reset();
		jasmine.Ajax.uninstall();
	});

	describe('when sending requests', function() {

		describe('should send xhr with correct', function() {

			describe('url from', function() {
				it('base', function() {
					swapi.get();
					expect(jasmine.Ajax.requests.mostRecent().url).toBe('http://swapi.co/api');
				});
				it('base + path', function() {
					swapi.many('starships').get();
					expect(jasmine.Ajax.requests.mostRecent().url).toBe('http://swapi.co/api/starships');
				});
				it('base + path + id', function() {
					swapi.one('starships', 10).get();
					expect(jasmine.Ajax.requests.mostRecent().url).toBe('http://swapi.co/api/starships/10');
				});
				it('absolute url overriding base', function() {
					swapi.one('http://swapi.co/api/starships/26').get();
					expect(jasmine.Ajax.requests.mostRecent().url).toBe('http://swapi.co/api/starships/26');
				});
				it('absolute url and id overriding base', function() {
					swapi.one('http://swapi.co/api/starships/', 123).get();
					expect(jasmine.Ajax.requests.mostRecent().url).toBe('http://swapi.co/api/starships/123');
				});
				it('data with form content type', function() {
					var req = swapi.type('form').send('name=Fergus').send('surname=Ruston').post();
					var xhr = jasmine.Ajax.requests.mostRecent();
					expect(xhr.url).toEqual("http://swapi.co/api?name=Fergus&surname=Ruston");
					expect(xhr.data()).toEqual({});
				});
			});

		});

	});

});